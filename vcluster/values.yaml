multiNamespaceMode:
  enabled: true
mapServices:
  fromHost:
    - from: formance/postgres-postgresql
      to: formance/postgres-postgresql
    - from: default/nats
      to: default/nats
    - from: formance/otel-collector-opentelemetry-collector
      to: formance/otel-collector-opentelemetry-collector
    - from: formance/elasticsearch-master
      to: formance/elasticsearch-master
    - from: tools/jaeger
      to: tools/jaeger
sync:
  ingresses:
    enabled: true
  generic:
    role:
      extraRules:
        - apiGroups: ["cert-manager.io"]
          resources: ["issuers", "certificates"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        - apiGroups: ["traefik.containo.us"]
          resources: ["ingressroutes", "serverstransports"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        # - apiGroups: ["traefik.io/v1alpha1"]
        #   resources:
        #     [
        #       "ingressroutes",
        #       "serverstransports",
        #       "ingressroutetcps",
        #       "ingressrouteudps",
        #     ]
        #   verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
    clusterRole:
      extraRules:
        - apiGroups: ["apiextensions.k8s.io"]
          resources: ["customresourcedefinitions"]
          verbs: ["get", "list", "watch"]
        #   kind: ServersTransport
        # - apiVersion: traefik.io/v1alpha1
        #   kind: IngressRoute
        # - apiVersion: traefik.io/v1alpha1
    config: |-
      version: v1beta1
      export:
        - apiVersion: cert-manager.io/v1
          kind: Issuer
        - apiVersion: cert-manager.io/v1
          kind: Certificate
        - apiVersion: traefik.containo.us/v1alpha1
          kind: IngressRoute
        - apiVersion: traefik.containo.us/v1alpha1
          kind: ServersTransport
        - apiVersion: v1
          kind: Secret
      import:
        - kind: Secret
          apiVersion: v1
